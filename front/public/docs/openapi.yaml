openapi: 3.0.3
info:
  title: Laravel-Starter-Project
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://192.168.118.35:3000'
paths:
  /api/auth/login:
    post:
      summary: 'Login user'
      description: 'API for logged in a user.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: 'Username dan password match'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'login success'
                  access_token: xxxxx
                  refresh_token: yyyyy
                properties:
                  message:
                    type: string
                    example: 'login success'
                    description: 'The message of the response API.'
                  access_token:
                    type: string
                    example: xxxxx
                    description: 'The token that will be used in every request header to authorize the user, the `access_token` only valid for 15 minutes.'
                  refresh_token:
                    type: string
                    example: yyyyy
                    description: 'The token that will be used for get new `access_token` when expired, the `refresh_token` expired in 1 month.'
        401:
          description: 'Username dan password not match'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Username atau password salah!'
                properties:
                  message:
                    type: string
                    example: 'Username atau password salah!'
                    description: 'The message of the response API.'
        500:
          description: 'Internal server error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Could not create token.'
                  error: 'some thing wrong!'
                properties:
                  message:
                    type: string
                    example: 'Could not create token.'
                    description: 'The message of the response API.'
                  error:
                    type: string
                    example: 'some thing wrong!'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The username of the user.'
                  example: minus
                password:
                  type: string
                  description: 'The password of the user.'
                  example: ratione
              required:
                - username
                - password
      security: []
  /api/auth/refresh:
    post:
      summary: 'Refresh Token'
      description: 'Refresh access token when expired.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: 'refresh_token valid'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Refresh token success!'
                  access_token: the_token
                properties:
                  message:
                    type: string
                    example: 'Refresh token success!'
                    description: 'The message of the response API.'
                  access_token:
                    type: string
                    example: the_token
                    description: 'The token that will be used in every request header to authorize the user, the `access_token` only valid for 15 minutes.'
        401:
          description: 'Access token is not found `go to login page`'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Authorization Token not found'
                  subcode: 4011
                properties:
                  message:
                    type: string
                    example: 'Authorization Token not found'
                    description: 'The message of the response API.'
                  subcode:
                    type: integer
                    example: 4011
                    description: 'The subcode of the response HTTP response code.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: 'The `refresh_token` from login API.'
                  example: id
              required:
                - refresh_token
      security: []
  /api/auth/logout:
    delete:
      summary: 'Logout user'
      description: 'API for loging out a user.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: x-access-token
          description: ''
          example: '{access_token from login API}'
          schema:
            type: string
      responses:
        200:
          description: 'header x-access-token valid'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User successfully signed out'
                properties:
                  message:
                    type: string
                    example: 'User successfully signed out'
                    description: 'The message of the response API.'
        401:
          description: 'Access token is not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Authorization Token not found'
                  subcode: 4011
                properties:
                  message:
                    type: string
                    example: 'Authorization Token not found'
                    description: 'The message of the response API.'
                  subcode:
                    type: integer
                    example: 4011
                    description: 'The subcode of the response HTTP response code.'
      tags:
        - Auth
  /api/auth/check:
    get:
      summary: 'Check logged in user'
      description: 'API for check logged in user.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: x-access-token
          description: ''
          example: '{access_token from login API}'
          schema:
            type: string
      responses:
        200:
          description: 'header x-access-token valid'
          content:
            application/json:
              schema:
                type: object
                example:
                  username: username
                  name: name
                  email: email
                properties:
                  username:
                    type: string
                    example: username
                  name:
                    type: string
                    example: name
                  email:
                    type: string
                    example: email
        401:
          description: 'Access token is not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Authorization Token not found'
                  subcode: 4011
                properties:
                  message:
                    type: string
                    example: 'Authorization Token not found'
                    description: 'The message of the response API.'
                  subcode:
                    type: integer
                    example: 4011
                    description: 'The subcode of the response HTTP response code.'
      tags:
        - Auth
  /api/register:
    post:
      summary: 'Register user'
      description: 'API for register a user.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: distinctio
                username:
                  type: string
                  description: 'Username of the user, used to login.'
                  example: id
                email:
                  type: string
                  description: 'Email of the user. Must be a valid email address.'
                  example: weimann.amy@example.com
                password:
                  type: string
                  description: 'Password of the user. Must be at least 8 characters.'
                  example: 1234passWORD
                password_confirmation:
                  type: string
                  description: 'Confirmation Password of the user. Must be at least 8 characters.'
                  example: 1234passWORD
              required:
                - name
                - username
                - email
                - password
                - password_confirmation
      security: []
tags:
  -
    name: Auth
    description: "\nAPIs for auth users"
  -
    name: Registration
    description: ''
