name: Auth
description: |-

  APIs for auth users
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      title: 'Login user'
      description: 'API for logged in a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'The username of the user.'
        required: true
        example: minus
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: ratione
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"message":"login success","access_token":"xxxxx","refresh_token":"yyyyy"}'
        headers: []
        description: '200, Username dan password match'
      -
        status: 401
        content: '{"message":"User tidak ditemukan!"}'
        headers: []
        description: '401, Username doesn''t exist'
      -
        status: 401
        content: '{"message":"Username atau password salah!"}'
        headers: []
        description: '401, Username dan password not match'
      -
        status: 500
        content: '{"message":"Could not create token.", "error":"some thing wrong!"}'
        headers: []
        description: '500, Internal server error'
    responseFields:
      message:
        name: message
        description: 'The message of the response API.'
        type: string
      access_token:
        name: access_token
        description: 'The token that will be used in every request header to authorize the user, the `access_token` only valid for 15 minutes.'
        type: string
      refresh_token:
        name: refresh_token
        description: 'The token that will be used for get new `access_token` when expired, the `refresh_token` expired in 1 month.'
        type: string
  -
    httpMethods:
      - POST
    uri: api/auth/refresh
    metadata:
      title: 'Refresh Token'
      description: 'Refresh access token when expired.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      refresh_token:
        name: refresh_token
        description: 'The `refresh_token` from login API.'
        required: true
        example: id
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"message":"Refresh token success!","access_token":"the_token"}'
        headers: []
        description: '200, refresh_token valid'
      -
        status: 401
        content: '{"message":"Token is Invalid","subcode":4012}'
        headers: []
        description: '401, Access token is invalid `go to login page`'
      -
        status: 401
        content: '{"message":"Token is Expired","subcode":4013}'
        headers: []
        description: '401, Access token is expired `go to login page`'
      -
        status: 401
        content: '{"message":"Authorization Token not found","subcode":4011}'
        headers: []
        description: '401, Access token is not found `go to login page`'
    responseFields:
      message:
        name: message
        description: 'The message of the response API.'
        type: string
      subcode:
        name: subcode
        description: 'The subcode of the response HTTP response code.'
        type: integer
      access_token:
        name: access_token
        description: 'The token that will be used in every request header to authorize the user, the `access_token` only valid for 15 minutes.'
        type: string
  -
    httpMethods:
      - DELETE
    uri: api/auth/logout
    metadata:
      title: 'Logout user'
      description: 'API for loging out a user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      x-access-token: '{access_token from login API}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message":"User successfully signed out"}'
        headers: []
        description: '200, header x-access-token valid'
      -
        status: 401
        content: '{"message":"Token is Invalid","subcode":4012}'
        headers: []
        description: '401, Access token is invalid'
      -
        status: 401
        content: '{"message":"Token is Expired","subcode":4013}'
        headers: []
        description: '401, Access token is expired'
      -
        status: 401
        content: '{"message":"Authorization Token not found","subcode":4011}'
        headers: []
        description: '401, Access token is not found'
    responseFields:
      message:
        name: message
        description: 'The message of the response API.'
        type: string
      subcode:
        name: subcode
        description: 'The subcode of the response HTTP response code.'
        type: integer
  -
    httpMethods:
      - GET
    uri: api/auth/check
    metadata:
      title: 'Check logged in user'
      description: 'API for check logged in user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      x-access-token: '{access_token from login API}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"username":"username","name":"name","email":"email"}'
        headers: []
        description: '200, header x-access-token valid'
      -
        status: 401
        content: '{"message":"Token is Invalid","subcode":4012}'
        headers: []
        description: '401, Access token is invalid'
      -
        status: 401
        content: '{"message":"Token is Expired","subcode":4013}'
        headers: []
        description: '401, Access token is expired'
      -
        status: 401
        content: '{"message":"Authorization Token not found","subcode":4011}'
        headers: []
        description: '401, Access token is not found'
    responseFields:
      message:
        name: message
        description: 'The message of the response API.'
        type: string
      subcode:
        name: subcode
        description: 'The subcode of the response HTTP response code.'
        type: integer
